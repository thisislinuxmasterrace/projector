env:
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build images and push to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./api  # Path to your API directory
          file: ./api/Dockerfile  # Path to your API Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/api:latest
          visibility: public

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend  # Path to your frontend directory
          file: ./frontend/Dockerfile  # Path to your Frontend Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/frontend:latest
          visibility: public
          
  deploy:
        needs: build
        name: deploy image
        runs-on: ubuntu-latest

        steps:
        - name: Install ssh keys
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: Connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd projector && git pull && docker compose pull && docker compose up -d && docker system prune -a -f && exit"
        - name: Cleanup
          run: rm -rf ~/.ssh
