name: Build, Push Docker Images, and Deploy

env:
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./api  # Path to your API directory
          file: ./api/Dockerfile  # Path to your API Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/api:latest
          visibility: public

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend  # Path to your frontend directory
          file: ./frontend/Dockerfile  # Path to your Frontend Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/frontend:latest
          visibility: public

      # - name: Deploy to Server
      #  uses: appleboy/ssh-action@v1.0.3
      #  with:
      #    host: ${{ secrets.HOST }}
      #    username: ${{ secrets.USERNAME }}
      #    password: ${{ secrets.PASSWORD }}
      #    port: 22
      #    script: |
      #      # Pull the latest images
      #      docker pull ghcr.io/${{ github.repository_owner }}/api:latest
      #      docker pull ghcr.io/${{ github.repository_owner }}/frontend:latest
      #     
      #     # Start the containers
      #     docker-compose -f /root/projector/docker-compose.yml up -d
      #     
      #     # Remove old images
      #     docker image prune -f
      #     docker rmi $(docker images -f "before=ghcr.io/${{ github.repository_owner }}/api:latest" -q) || true
      #     docker rmi $(docker images -f "before=ghcr.io/${{ github.repository_owner }}/frontend:latest" -q) || true
